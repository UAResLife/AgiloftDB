/*
Deployment script for AgiloftUtilDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "AgiloftUtilDB"
:setvar DefaultFilePrefix "AgiloftUtilDB"
:setvar DefaultDataPath "C:\Users\ggonzalez\AppData\Local\Microsoft\VisualStudio\SSDT\AgiloftUtilDB"
:setvar DefaultLogPath "C:\Users\ggonzalez\AppData\Local\Microsoft\VisualStudio\SSDT\AgiloftUtilDB"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE,
                DISABLE_BROKER 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
PRINT N'Rename refactoring operation with key b1169239-0468-44ca-a8e2-b50e4f76dfbe is skipped, element [dbo].[Employee].[Id] (SqlSimpleColumn) will not be renamed to NetID';


GO
PRINT N'Rename refactoring operation with key 2c2a4dda-8c51-4a03-9e30-8d3a4c09cccc, 762c548a-2c2e-445e-a1e9-ae6b77b44e67 is skipped, element [dbo].[Employee].[Password] (SqlSimpleColumn) will not be renamed to FirstName';


GO
PRINT N'Creating [dbo].[Account]...';


GO
CREATE TABLE [dbo].[Account] (
    [Number]      INT           NOT NULL,
    [Name]        NVARCHAR (64) NULL,
    [Closed]      BIT           NULL,
    [DateChanged] DATETIME      NOT NULL,
    CONSTRAINT [PK_Account_AccountNumber] PRIMARY KEY CLUSTERED ([Number] ASC)
);


GO
PRINT N'Creating [dbo].[AccountHist]...';


GO
CREATE TABLE [dbo].[AccountHist] (
    [Number]      INT           NOT NULL,
    [Name]        NVARCHAR (64) NULL,
    [Closed]      BIT           NULL,
    [DateChanged] DATETIME      NOT NULL,
    [DateMoved]   DATETIME      NOT NULL
);


GO
PRINT N'Creating [dbo].[AccountTemp]...';


GO
CREATE TABLE [dbo].[AccountTemp] (
    [Number] INT           NOT NULL,
    [Name]   NVARCHAR (64) NULL,
    [Closed] BIT           NULL,
    CONSTRAINT [PK_AccountTemp_AccountNumber] PRIMARY KEY CLUSTERED ([Number] ASC)
);


GO
PRINT N'Creating [dbo].[Employee]...';


GO
CREATE TABLE [dbo].[Employee] (
    [NetID]              NVARCHAR (64)  NOT NULL,
    [EmplID]             NVARCHAR (16)  NULL,
    [FirstName]          NVARCHAR (64)  NULL,
    [LastName]           NVARCHAR (64)  NULL,
    [PreferredFirstName] NVARCHAR (64)  NULL,
    [PreferredLastName]  NVARCHAR (64)  NULL,
    [Department]         NVARCHAR (64)  NULL,
    [Unit]               NVARCHAR (64)  NULL,
    [PrimaryJobPosition] NVARCHAR (128) NULL,
    [Email]              NVARCHAR (64)  NULL,
    [OfficePhone]        NVARCHAR (32)  NULL,
    [EmployeeStatus]     NVARCHAR (16)  NULL,
    [TerminationDate]    DATETIME       NULL,
    [SupervisorNetID]    NVARCHAR (64)  NULL,
    [DateChanged]        DATETIME       NOT NULL,
    CONSTRAINT [PK_Employees_NetID] PRIMARY KEY CLUSTERED ([NetID] ASC)
);


GO
PRINT N'Creating [dbo].[EmployeeHist]...';


GO
CREATE TABLE [dbo].[EmployeeHist] (
    [NetID]              NVARCHAR (64)  NOT NULL,
    [EmplID]             NVARCHAR (16)  NULL,
    [FirstName]          NVARCHAR (64)  NULL,
    [LastName]           NVARCHAR (64)  NULL,
    [PreferredFirstName] NVARCHAR (64)  NULL,
    [PreferredLastName]  NVARCHAR (64)  NULL,
    [Department]         NVARCHAR (64)  NULL,
    [Unit]               NVARCHAR (64)  NULL,
    [PrimaryJobPosition] NVARCHAR (128) NULL,
    [Email]              NVARCHAR (64)  NULL,
    [OfficePhone]        NVARCHAR (32)  NULL,
    [EmployeeStatus]     NVARCHAR (16)  NULL,
    [TerminationDate]    DATETIME       NULL,
    [SupervisorNetID]    NVARCHAR (64)  NULL,
    [DateChanged]        DATETIME       NOT NULL,
    [DateMoved]          DATETIME       NOT NULL
);


GO
PRINT N'Creating [dbo].[EmployeeTemp]...';


GO
CREATE TABLE [dbo].[EmployeeTemp] (
    [NetID]              NVARCHAR (64)  NOT NULL,
    [EmplID]             NVARCHAR (16)  NULL,
    [FirstName]          NVARCHAR (64)  NULL,
    [LastName]           NVARCHAR (64)  NULL,
    [PreferredFirstName] NVARCHAR (64)  NULL,
    [PreferredLastName]  NVARCHAR (64)  NULL,
    [Department]         NVARCHAR (64)  NULL,
    [Unit]               NVARCHAR (64)  NULL,
    [PrimaryJobPosition] NVARCHAR (128) NULL,
    [Email]              NVARCHAR (64)  NULL,
    [OfficePhone]        NVARCHAR (32)  NULL,
    [EmployeeStatus]     NVARCHAR (16)  NULL,
    [TerminationDate]    DATETIME       NULL,
    [SupervisorNetID]    NVARCHAR (64)  NULL,
    CONSTRAINT [PK_EmployeeTemp_NetID] PRIMARY KEY CLUSTERED ([NetID] ASC)
);


GO
PRINT N'Creating [dbo].[FiscalPeriod]...';


GO
CREATE TABLE [dbo].[FiscalPeriod] (
    [Id]          INT           NOT NULL,
    [Number]      INT           NULL,
    [Name]        NVARCHAR (64) NULL,
    [StartDate]   DATE          NULL,
    [EndDate]     DATE          NULL,
    [FiscalYear]  INT           NULL,
    [QuarterID]   INT           NULL,
    [DateChanged] DATETIME      NOT NULL,
    CONSTRAINT [PK_FiscalPeriod_ID] PRIMARY KEY NONCLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[FiscalPeriodHist]...';


GO
CREATE TABLE [dbo].[FiscalPeriodHist] (
    [Id]          INT           NOT NULL,
    [Number]      INT           NULL,
    [Name]        NVARCHAR (64) NULL,
    [StartDate]   DATE          NULL,
    [EndDate]     DATE          NULL,
    [FiscalYear]  INT           NULL,
    [QuarterID]   INT           NULL,
    [DateChanged] DATETIME      NOT NULL,
    [DateMoved]   DATETIME      NOT NULL
);


GO
PRINT N'Creating [dbo].[FiscalPeriodTemp]...';


GO
CREATE TABLE [dbo].[FiscalPeriodTemp] (
    [Id]         INT           NOT NULL,
    [Number]     INT           NULL,
    [Name]       NVARCHAR (64) NULL,
    [StartDate]  DATE          NULL,
    [EndDate]    DATE          NULL,
    [FiscalYear] INT           NULL,
    [QuarterID]  INT           NULL,
    CONSTRAINT [PK_FiscalPeriodTemp_ID] PRIMARY KEY NONCLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[FiscalQuarter]...';


GO
CREATE TABLE [dbo].[FiscalQuarter] (
    [Id]          INT           NOT NULL,
    [Number]      INT           NULL,
    [Name]        NVARCHAR (64) NULL,
    [DateChanged] DATETIME      NOT NULL,
    CONSTRAINT [PK_FiscalQuarter_ID] PRIMARY KEY NONCLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[FiscalQuarterHist]...';


GO
CREATE TABLE [dbo].[FiscalQuarterHist] (
    [Id]          INT           NOT NULL,
    [Number]      INT           NULL,
    [Name]        NVARCHAR (64) NULL,
    [DateChanged] DATETIME      NOT NULL,
    [DateMoved]   DATETIME      NOT NULL
);


GO
PRINT N'Creating [dbo].[FiscalQuarterTemp]...';


GO
CREATE TABLE [dbo].[FiscalQuarterTemp] (
    [Id]     INT           NOT NULL,
    [Number] INT           NULL,
    [Name]   NVARCHAR (64) NULL,
    CONSTRAINT [PK_FiscalQuarterTemp_ID] PRIMARY KEY NONCLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[FiscalYear]...';


GO
CREATE TABLE [dbo].[FiscalYear] (
    [FiscalYear]  INT      NOT NULL,
    [StartDate]   DATE     NULL,
    [EndDate]     DATE     NULL,
    [DateChanged] DATETIME NOT NULL,
    CONSTRAINT [PK_FiscalYear_FiscalYear] PRIMARY KEY NONCLUSTERED ([FiscalYear] ASC)
);


GO
PRINT N'Creating [dbo].[FiscalYearHist]...';


GO
CREATE TABLE [dbo].[FiscalYearHist] (
    [FiscalYear]  INT      NOT NULL,
    [StartDate]   DATE     NULL,
    [EndDate]     DATE     NULL,
    [DateChanged] DATETIME NOT NULL,
    [DateMoved]   DATETIME NOT NULL
);


GO
PRINT N'Creating [dbo].[FiscalYearTemp]...';


GO
CREATE TABLE [dbo].[FiscalYearTemp] (
    [FiscalYear] INT  NOT NULL,
    [StartDate]  DATE NULL,
    [EndDate]    DATE NULL,
    CONSTRAINT [PK_FiscalYearTemp_FiscalYear] PRIMARY KEY NONCLUSTERED ([FiscalYear] ASC)
);


GO
PRINT N'Creating [dbo].[ObjectCode]...';


GO
CREATE TABLE [dbo].[ObjectCode] (
    [Number]      NVARCHAR (16) NOT NULL,
    [Name]        NVARCHAR (64) NULL,
    [DateChanged] DATETIME      NOT NULL,
    CONSTRAINT [PK_ObjectCode_Number] PRIMARY KEY CLUSTERED ([Number] ASC)
);


GO
PRINT N'Creating [dbo].[ObjectCodeHist]...';


GO
CREATE TABLE [dbo].[ObjectCodeHist] (
    [Number]      NVARCHAR (16) NOT NULL,
    [Name]        NVARCHAR (64) NULL,
    [DateChanged] DATETIME      NOT NULL,
    [DateMoved]   DATETIME      NOT NULL
);


GO
PRINT N'Creating [dbo].[ObjectCodeTemp]...';


GO
CREATE TABLE [dbo].[ObjectCodeTemp] (
    [Number] NVARCHAR (16) NOT NULL,
    [Name]   NVARCHAR (64) NULL,
    CONSTRAINT [PK_ObjectCodeTemp_Number] PRIMARY KEY CLUSTERED ([Number] ASC)
);


GO
PRINT N'Creating [dbo].[ProjectCode]...';


GO
CREATE TABLE [dbo].[ProjectCode] (
    [Code]        NVARCHAR (16)  NOT NULL,
    [Name]        NVARCHAR (64)  NULL,
    [Description] NVARCHAR (MAX) NULL,
    [Active]      BIT            NULL,
    [DateChanged] DATETIME       NOT NULL,
    CONSTRAINT [PK_ProjectCode_Code] PRIMARY KEY CLUSTERED ([Code] ASC)
);


GO
PRINT N'Creating [dbo].[ProjectCodeHist]...';


GO
CREATE TABLE [dbo].[ProjectCodeHist] (
    [Code]        NVARCHAR (16)  NOT NULL,
    [Name]        NVARCHAR (64)  NULL,
    [Description] NVARCHAR (MAX) NULL,
    [Active]      BIT            NULL,
    [DateChanged] DATETIME       NOT NULL,
    [DateMoved]   DATETIME       NOT NULL
);


GO
PRINT N'Creating [dbo].[ProjectCodeTemp]...';


GO
CREATE TABLE [dbo].[ProjectCodeTemp] (
    [Code]        NVARCHAR (16)  NOT NULL,
    [Name]        NVARCHAR (64)  NULL,
    [Description] NVARCHAR (MAX) NULL,
    [Active]      BIT            NULL,
    CONSTRAINT [PK_ProjectCodeTemp_Code] PRIMARY KEY CLUSTERED ([Code] ASC)
);


GO
PRINT N'Creating [dbo].[SubAccount]...';


GO
CREATE TABLE [dbo].[SubAccount] (
    [Id]            INT           NOT NULL,
    [AccountNumber] INT           NULL,
    [Number]        NVARCHAR (64) NULL,
    [Name]          NVARCHAR (64) NULL,
    [Active]        BIT           NULL,
    [DateChanged]   DATETIME      NOT NULL,
    CONSTRAINT [PK_SubAccount_ID] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[SubAccountHist]...';


GO
CREATE TABLE [dbo].[SubAccountHist] (
    [Id]            INT           NOT NULL,
    [AccountNumber] INT           NULL,
    [Number]        NVARCHAR (64) NULL,
    [Name]          NVARCHAR (64) NULL,
    [Active]        BIT           NULL,
    [DateChanged]   DATETIME      NOT NULL,
    [DateMoved]     DATETIME      NOT NULL
);


GO
PRINT N'Creating [dbo].[SubAccountTemp]...';


GO
CREATE TABLE [dbo].[SubAccountTemp] (
    [Id]            INT           NOT NULL,
    [AccountNumber] INT           NULL,
    [Number]        NVARCHAR (64) NULL,
    [Name]          NVARCHAR (64) NULL,
    [Active]        BIT           NULL,
    CONSTRAINT [PK_SubAccountTemp_ID] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[SubObjectCode]...';


GO
CREATE TABLE [dbo].[SubObjectCode] (
    [Number]      NVARCHAR (16) NOT NULL,
    [Name]        NVARCHAR (64) NULL,
    [DateChanged] DATETIME      NOT NULL,
    CONSTRAINT [PK_SubObjectCode_Number] PRIMARY KEY CLUSTERED ([Number] ASC)
);


GO
PRINT N'Creating [dbo].[SubObjectCodeHist]...';


GO
CREATE TABLE [dbo].[SubObjectCodeHist] (
    [Number]      NVARCHAR (16) NOT NULL,
    [Name]        NVARCHAR (64) NULL,
    [DateChanged] DATETIME      NOT NULL,
    [DateMoved]   DATETIME      NOT NULL
);


GO
PRINT N'Creating [dbo].[SubObjectCodeTemp]...';


GO
CREATE TABLE [dbo].[SubObjectCodeTemp] (
    [Number] NVARCHAR (16) NOT NULL,
    [Name]   NVARCHAR (64) NULL,
    CONSTRAINT [PK_SubObjectCodeTemp_Number] PRIMARY KEY CLUSTERED ([Number] ASC)
);


GO
PRINT N'Creating [dbo].[DF_Account_DateChanged]...';


GO
ALTER TABLE [dbo].[Account]
    ADD CONSTRAINT [DF_Account_DateChanged] DEFAULT Current_Timestamp FOR [DateChanged];


GO
PRINT N'Creating [dbo].[DF_AccountHist_DateMoved]...';


GO
ALTER TABLE [dbo].[AccountHist]
    ADD CONSTRAINT [DF_AccountHist_DateMoved] DEFAULT current_timestamp FOR [DateMoved];


GO
PRINT N'Creating [dbo].[DF_Employee_DateChanged]...';


GO
ALTER TABLE [dbo].[Employee]
    ADD CONSTRAINT [DF_Employee_DateChanged] DEFAULT Current_Timestamp FOR [DateChanged];


GO
PRINT N'Creating [dbo].[DF_EmployeeHist_DateMoved]...';


GO
ALTER TABLE [dbo].[EmployeeHist]
    ADD CONSTRAINT [DF_EmployeeHist_DateMoved] DEFAULT current_timestamp FOR [DateMoved];


GO
PRINT N'Creating [dbo].[DF_DiscalPeriod_DateChanged]...';


GO
ALTER TABLE [dbo].[FiscalPeriod]
    ADD CONSTRAINT [DF_DiscalPeriod_DateChanged] DEFAULT Current_Timestamp FOR [DateChanged];


GO
PRINT N'Creating [dbo].[DF_FiscalPeriodHist_DateMoved]...';


GO
ALTER TABLE [dbo].[FiscalPeriodHist]
    ADD CONSTRAINT [DF_FiscalPeriodHist_DateMoved] DEFAULT current_timestamp FOR [DateMoved];


GO
PRINT N'Creating [dbo].[DF_FiscalQuarter_DateChanged]...';


GO
ALTER TABLE [dbo].[FiscalQuarter]
    ADD CONSTRAINT [DF_FiscalQuarter_DateChanged] DEFAULT Current_Timestamp FOR [DateChanged];


GO
PRINT N'Creating [dbo].[DF_FiscalQuarterHist_DateMoved]...';


GO
ALTER TABLE [dbo].[FiscalQuarterHist]
    ADD CONSTRAINT [DF_FiscalQuarterHist_DateMoved] DEFAULT current_timestamp FOR [DateMoved];


GO
PRINT N'Creating [dbo].[DF_FiscalYear_DateChanged]...';


GO
ALTER TABLE [dbo].[FiscalYear]
    ADD CONSTRAINT [DF_FiscalYear_DateChanged] DEFAULT Current_Timestamp FOR [DateChanged];


GO
PRINT N'Creating [dbo].[DF_FiscalYearHist_DateMoved]...';


GO
ALTER TABLE [dbo].[FiscalYearHist]
    ADD CONSTRAINT [DF_FiscalYearHist_DateMoved] DEFAULT current_timestamp FOR [DateMoved];


GO
PRINT N'Creating [dbo].[DF_ObjectCode_DateChanged]...';


GO
ALTER TABLE [dbo].[ObjectCode]
    ADD CONSTRAINT [DF_ObjectCode_DateChanged] DEFAULT Current_Timestamp FOR [DateChanged];


GO
PRINT N'Creating [dbo].[DF_ObjectCodeHist_DateMoved]...';


GO
ALTER TABLE [dbo].[ObjectCodeHist]
    ADD CONSTRAINT [DF_ObjectCodeHist_DateMoved] DEFAULT Current_Timestamp FOR [DateMoved];


GO
PRINT N'Creating [dbo].[DF_ProjectCode_DateChanged]...';


GO
ALTER TABLE [dbo].[ProjectCode]
    ADD CONSTRAINT [DF_ProjectCode_DateChanged] DEFAULT Current_Timestamp FOR [DateChanged];


GO
PRINT N'Creating [dbo].[DF_ProjectCodeHist_DateMoved]...';


GO
ALTER TABLE [dbo].[ProjectCodeHist]
    ADD CONSTRAINT [DF_ProjectCodeHist_DateMoved] DEFAULT Current_Timestamp FOR [DateMoved];


GO
PRINT N'Creating [dbo].[DF_SubAccount_DateChanged]...';


GO
ALTER TABLE [dbo].[SubAccount]
    ADD CONSTRAINT [DF_SubAccount_DateChanged] DEFAULT Current_Timestamp FOR [DateChanged];


GO
PRINT N'Creating [dbo].[DF_SubAccountHist_DateMoved]...';


GO
ALTER TABLE [dbo].[SubAccountHist]
    ADD CONSTRAINT [DF_SubAccountHist_DateMoved] DEFAULT Current_Timestamp FOR [DateMoved];


GO
PRINT N'Creating [dbo].[DF_SubObjectCode_DateChanged]...';


GO
ALTER TABLE [dbo].[SubObjectCode]
    ADD CONSTRAINT [DF_SubObjectCode_DateChanged] DEFAULT Current_Timestamp FOR [DateChanged];


GO
PRINT N'Creating [dbo].[DF_SubObjectCodeHist_DateMoved]...';


GO
ALTER TABLE [dbo].[SubObjectCodeHist]
    ADD CONSTRAINT [DF_SubObjectCodeHist_DateMoved] DEFAULT Current_Timestamp FOR [DateMoved];


GO
PRINT N'Creating [dbo].[NoDashOrNull]...';


GO
CREATE FUNCTION [dbo].[NoDashOrNull]
(
	@Txt nvarchar(Max)
)
RETURNS Nvarchar(MAX)
AS
BEGIN
	RETURN CASE WHEN @Txt is null or @Txt = '-' THEN '' ELSE @Txt END
END
GO
PRINT N'Creating [dbo].[Employee_vw]...';


GO
CREATE VIEW [dbo].[Employee_vw]
	AS 

	SELECT NetID
			, dbo.NoDashOrNull(FirstName) FirstName
			, dbo.NoDashOrNull(LastName) LastName
			, dbo.NoDashOrNull(PreferredFirstName) PreferredFirstName
			, dbo.NoDashOrNull(PreferredLastName) PreferredLastName
			, dbo.NoDashOrNull(Department) Department
			, dbo.NoDashOrNull(Unit) Unit
			, dbo.NoDashOrNull(PrimaryJobPosition) PrimaryJobPosition
			, dbo.NoDashOrNull(Email) Email
			, dbo.NoDashOrNull(OfficePhone) OfficePhone
			, dbo.NoDashOrNull(EmployeeStatus) EmployeeStatus
			, TerminationDate
			, dbo.NoDashOrNull(SupervisorNetID) SupervisorNetID
			, dbo.NoDashOrNull(EmplID) EmplID
	FROM	Employee
	WHERE	FirstName is not null
			AND LastName is not null
GO
PRINT N'Creating [dbo].[ImportAccount]...';


GO
CREATE PROCEDURE [dbo].[ImportAccount]
AS
	-- Get distinct rows into the local temp table

		TRUNCATE Table AccountTemp;

		WITH E AS (
			SELECT *
			FROM OPENQUERY(EPM, '
				Select DISTINCT ACCOUNT_NBR "Number"
						, ACCOUNT_LD Name
						, CASE WHEN ACCOUNT_CLOSED_FLG = ''Y'' THEN 1 ELSE 0 END Closed

				FROM KUALI_ADMIN.KF_UA_DPT_RSD_ACCT
			')
		)

		INSERT INTO AccountTemp 
		
		SELECT * FROM E 
		EXCEPT 
		SELECT [Number], [Name], [Closed] FROM dbo.Account

	-- Delete distinct rows from Account and insterting distinct ones with current date (date column has current_timestamp as default)
	

		Insert into AccountHist
		SELECT [Number]
				, [Name]
				, [Closed]
				, DateChanged
				, Current_Timestamp 
		FROM Account A
		WHERE A.Number in (
								SELECT	Number
								FROM	AccountTemp
							)
			
		DELETE Account 
		FROM Account A
		WHERE A.Number in (
								SELECT	Number
								FROM	AccountTemp
							)

		INSERT INTO Account SELECT A.*, Current_TimeStamp From AccountTemp A
	

Return @@Rowcount
GO
PRINT N'Creating [dbo].[ImportEmployee]...';


GO
CREATE PROCEDURE [dbo].[ImportEmployee]
AS
	-- Get distinct rows into the local temp table

			TRUNCATE Table EmployeeTemp;

			WITH E AS
			(
				SELECT * FROM OPENQUERY(EPM, '
						SELECT E.NetID
								, EmplID
								, FirstName
								, LastName
								, PreferredFirstName
								, PreferredLastName
								, Department
								, UNIT
								, PrimaryJobPosition
								, Email
								, OfficePhone
								, EmployeeStatus
								, TerminationDate
								, SupervisorNetID
						FROM (
							SELECT    E.NetID
									, E.EmplID
									, E.FIRST_NAME FirstName
									, E.LAST_NAME LastName
									, E.PREF_FIRST_NAME PreferredFirstName
									, E.PREF_LAST_NAME PreferredLastName
									, E.DEPT_NAME Department
									, E.UNIT
									, E.UA_TITLE_CONCAT PrimaryJobPosition
									, E.EMAIL_ADDR Email
									, E.WORK_PHONE OfficePhone
									, E.EMPL_STAT_CD EmployeeStatus
									, E.TERMINATION_DT TerminationDate
									, E.SUPERVSR_NETID SupervisorNetID
									, Row_Number() Over (Partition by E.NetID order by CASE WHEN UNIT is not null then 1 else 2 END, CASE WHEN SUPERVSR_NETID = ''-'' then 2 else 1 END) ORD
							FROM SYSADM.PS_UA_DPT_RSD_EMPL E
						) E
						WHERE ORD = 1
				')
			)

			INSERT INTO EmployeeTemp 
			SELECT * FROM E 
			EXCEPT 
			SELECT [NetID]
					, EmplID 
					, [FirstName]
					, [LastName]
					, [PreferredFirstName]
					, [PreferredLastName]
					, [Department]
					, [Unit]
					, [PrimaryJobPosition]
					, [Email]
					, [OfficePhone]
					, [EmployeeStatus]
					, [TerminationDate]
					, [SupervisorNetID] 
			FROM dbo.Employee

	-- Delete distinct rows from Employee and insterting distinct ones with current date (date column has current_timestamp as default)

			Insert into EmployeeHist
			SELECT [NetID]
					, EmplID 
					, [FirstName]
					, [LastName]
					, [PreferredFirstName]
					, [PreferredLastName]
					, [Department]
					, [Unit]
					, [PrimaryJobPosition]
					, [Email]
					, [OfficePhone]
					, [EmployeeStatus]
					, [TerminationDate]
					, [SupervisorNetID] 
					, DateChanged
					, Current_Timestamp 
			FROM Employee A
			WHERE A.NetID in (
									SELECT	NetID
									FROM	EmployeeTemp
								)
			
			DELETE Employee 
			FROM Employee A
			WHERE A.NetID in (
									SELECT	NetID
									FROM	EmployeeTemp
								)

			INSERT INTO Employee SELECT E.*, Current_TimeStamp From EmployeeTemp E



Return @@Rowcount
GO
PRINT N'Creating [dbo].[ImportFiscalPeriod]...';


GO
CREATE PROCEDURE [dbo].[ImportFiscalPeriod]
AS
	-- Get distinct rows into the local temp table

			TRUNCATE Table FiscalPeriodTemp;

			WITH E AS
			(
				SELECT * FROM OPENQUERY(EPM, '
						SELECT FISCAL_PERIOD_SID "Id"
								, FPERIOD_YEAR_NBR "Number"
								, FPERIOD_SD "Name"
								, FPERIOD_START_DT_UA "StartDate"
								, FPERIOD_END_DT "EndDate"
								, FISCAL_YEAR "FiscalYear"
								, FPERIOD_QUARTER_NBR_UA "QuarterID"
						FROM    KUALI_ADMIN.KF_UA_DPT_RSD_FPRD
						WHERE   CURRENT_INDC = ''Y'' 
				')
			)


			INSERT INTO FiscalPeriodTemp 
			SELECT * FROM E
			EXCEPT 
			SELECT [Id]
					, [Number]
					, [Name]
					, [StartDate]
					, [EndDate]
					, [FiscalYear]
					, [QuarterID]
			FROM dbo.FiscalPeriod

	-- Delete distinct rows from FiscalPeriod and insterting distinct ones with current date (date column has current_timestamp as default)


			Insert into FiscalPeriodHist
			SELECT [Id]
					, [Number]
					, [Name]
					, [StartDate]
					, [EndDate]
					, [FiscalYear]
					, [QuarterID]
					, DateChanged
					, Current_Timestamp 
			FROM FiscalPeriod A
			WHERE A.Id in (
									SELECT	Id
									FROM	FiscalPeriodTemp
								)
			
			DELETE FiscalPeriod 
			FROM FiscalPeriod A
			WHERE A.Id in (
									SELECT	Id
									FROM	FiscalPeriodTemp
								)

			INSERT INTO FiscalPeriod SELECT F.*, Current_TimeStamp From FiscalPeriodTemp F
	

Return @@Rowcount
GO
PRINT N'Creating [dbo].[ImportFiscalQuarter]...';


GO
CREATE PROCEDURE [dbo].[ImportFiscalQuarter]
AS

	-- Get distinct rows into the local temp table

			TRUNCATE Table FiscalQuarterTemp;

			WITH E AS
			(
				SELECT * FROM OPENQUERY(EPM, '
						SELECT DISTINCT FPERIOD_QUARTER_NBR_UA "Id"
								, FPERIOD_QUARTER_YEAR_NBR_UA "Number"
								, FPERIOD_QUARTER_SD_UA "Name"
						FROM    KUALI_ADMIN.KF_UA_DPT_RSD_FPRD
						WHERE   CURRENT_INDC = ''Y'' 
				')
			)

			INSERT INTO FiscalQuarterTemp 
			SELECT * FROM E
			EXCEPT 
			SELECT [Id]
					, [Number]
					, [Name]
			FROM dbo.FiscalQuarter

	-- Delete distinct rows from FiscalQuarter and insterting distinct ones with current date (date column has current_timestamp as default)
	

			Insert into FiscalQuarterHist
			SELECT [Id]
					, [Number]
					, [Name]
					, DateChanged
					, Current_Timestamp 
			FROM FiscalQuarter A
			WHERE A.Id in (
									SELECT	Id
									FROM	FiscalQuarterTemp
								)
			
			DELETE FiscalQuarter 
			FROM FiscalQuarter A
			WHERE A.Id in (
									SELECT	Id
									FROM	FiscalQuarterTemp
								)

			INSERT INTO FiscalQuarter SELECT F.*, Current_TimeStamp From FiscalQuarterTemp F

Return @@Rowcount
GO
PRINT N'Creating [dbo].[ImportFiscalYear]...';


GO
CREATE PROCEDURE [dbo].[ImportFiscalYear]
AS

	-- Get distinct rows into the local temp table

			TRUNCATE Table FiscalYearTemp;

			WITH E AS
			(
				SELECT * FROM OPENQUERY(EPM, '
						SELECT DISTINCT FISCAL_YEAR FiscalYear
								, FPERIOD_YEAR_START_DT_UA StartDate
								, FPERIOD_YEAR_END_DT_UA EndDate
						FROM    KUALI_ADMIN.KF_UA_DPT_RSD_FPRD
						WHERE   CURRENT_INDC = ''Y'' 
				')
			)



			INSERT INTO FiscalYearTemp 
			SELECT * FROM E
			EXCEPT 
			SELECT [FiscalYear]
					, [StartDate]
					, [EndDate]
			FROM dbo.FiscalYear

	-- Delete distinct rows from FiscalYear and insterting distinct ones with current date (date column has current_timestamp as default)
	

			Insert into FiscalYearHist
			SELECT [FiscalYear]
					, [StartDate]
					, [EndDate]
					, DateChanged
					, Current_Timestamp 
			FROM FiscalYear A
			WHERE A.FiscalYear in (
									SELECT	FiscalYear
									FROM	FiscalYearTemp
								)
			
			DELETE FiscalYear 
			FROM FiscalYear A
			WHERE A.FiscalYear in (
									SELECT	FiscalYear
									FROM	FiscalYearTemp
								)

			INSERT INTO FiscalYear SELECT F.*, Current_TimeStamp From FiscalYearTemp F

Return @@Rowcount
GO
PRINT N'Creating [dbo].[ImportObjectCode]...';


GO
CREATE PROCEDURE [dbo].[ImportObjectCode]
AS
	-- Get distinct rows into the local temp table

			TRUNCATE Table ObjectCodeTemp;

			WITH E AS
			(
				SELECT * FROM OPENQUERY(EPM, '
						SELECT DISTINCT P.OBJECT_CD "Number"
										,P2.Object_LD Name
						FROM    KUALI_ADMIN.KF_UA_DPT_RSD_FOBJ P
									INNER JOIN (
										SELECT  OBJECT_CD
												, OBJECT_LD 
												, Row_Number() OVER (PARTITION BY OBJECT_CD ORDER BY FISCAL_YEAR DESC, OBJECT_CODE_SID DESC) OBJECT_CD_RANK
										FROM    KUALI_ADMIN.KF_UA_DPT_RSD_FOBJ P 
										WHERE   FISCAL_YEAR >= To_Number((Select Fiscal_Year from KUALI_ADMIN.KF_UA_DPT_RSD_FPRD WHERE sysdate between FPERIOD_YEAR_START_DT_UA AND FPERIOD_YEAR_END_DT_UA AND ROWNUM = 1)) - 5
												AND OBJECT_TYPE_CD IN (''IN'', ''EX'')
									) P2
										ON P.OBJECT_CD = P2.OBJECT_CD
										AND P2.OBJECT_CD_RANK = 1
						WHERE   FISCAL_YEAR >= To_Number((Select Fiscal_Year from KUALI_ADMIN.KF_UA_DPT_RSD_FPRD WHERE sysdate between FPERIOD_YEAR_START_DT_UA AND FPERIOD_YEAR_END_DT_UA AND ROWNUM = 1)) - 5
								AND SUB_OBJECT_ACCOUNT_NBR IN 
									( SELECT DISTINCT ACCOUNT_NBR 
									  FROM KUALI_ADMIN.KF_UA_DPT_RSD_ACCT P 
									  WHERE ACCOUNT_ORGANIZATION_CD = ''8801'')				
				')
			)

			INSERT INTO ObjectCodeTemp 
			SELECT * FROM E
			EXCEPT 
			SELECT [Number]
					, [Name]
			FROM dbo.ObjectCode

	-- Delete distinct rows from ObjectCode and insterting distinct ones with current date (date column has current_timestamp as default)
			Insert into ObjectCodeHist
			SELECT [Number]
					, [Name]
					, DateChanged
					, Current_Timestamp 
			FROM ObjectCode A
			WHERE A.Number in (
									SELECT	Number
									FROM	ObjectCodeTemp
								)
			
			DELETE ObjectCode 
			FROM ObjectCode A
			WHERE A.Number in (
									SELECT	Number
									FROM	ObjectCodeTemp
								)

			INSERT INTO ObjectCode SELECT O.*, Current_TimeStamp From ObjectCodeTemp O

Return @@Rowcount
GO
PRINT N'Creating [dbo].[ImportProjectCode]...';


GO
CREATE PROCEDURE [dbo].[ImportProjectCode]
AS
	-- Setting SQL to get distinct rows into the local temp table
			TRUNCATE Table ProjectCodeTemp;

			WITH E AS
			(
				SELECT * FROM OPENQUERY(EPM, '
						SELECT  PROJECT_CD Code
								, PROJECT_SD Name
								, PROJECT_LD Description
								, CASE WHEN PROJECT_ACTIVE_FLG = ''Y'' THEN 1 ELSE 0 END Active
						FROM    KUALI_ADMIN.KF_UA_DPT_RSD_PROJ P 
				')
			)


			INSERT INTO ProjectCodeTemp 
			SELECT * FROM E
			EXCEPT 
			SELECT [Code]
					, [Name]
					, [Description]
					, [Active]
			FROM dbo.ProjectCode

	-- Distinct rows from ProjectCode and insterting distinct ones with current date (date column has current_timestamp as default)

			Insert into ProjectCodeHist
			SELECT [Code]
					, [Name]
					, [Description]
					, [Active]
					, DateChanged
					, Current_Timestamp 
			FROM ProjectCode A
			WHERE A.Code in (
									SELECT	Code
									FROM	ProjectCodeTemp
								)
			
			DELETE ProjectCode 
			FROM ProjectCode A
			WHERE A.Code in (
									SELECT	Code
									FROM	ProjectCodeTemp
								)

			INSERT INTO ProjectCode SELECT P.*, Current_TimeStamp From ProjectCodeTemp P

Return @@Rowcount
GO
PRINT N'Creating [dbo].[ImportSubAccount]...';


GO
CREATE PROCEDURE [dbo].[ImportSubAccount]
AS
	-- Get distinct rows into the local temp table
			TRUNCATE Table SubAccountTemp;
			
			WITH E AS
			(
				SELECT * FROM OPENQUERY(EPM, '
						SELECT DISTINCT ACCOUNT_SID "Id"
							  , ACCOUNT_NBR "AccountNumber"
							  , SUB_ACCOUNT_NBR "Number"
							  , SUB_ACCOUNT_LD "Name"
							  , CASE WHEN SUB_ACCOUNT_ACTIVE_FLG = ''Y'' THEN 1 ELSE 0 END "Active"
						FROM  KUALI_ADMIN.KF_UA_DPT_RSD_ACCT P 
						WHERE Sub_Account_NBR <> ''-''				
				')
			)

			INSERT INTO SubAccountTemp 
			SELECT * FROM E
			EXCEPT 
			SELECT [Id]
					, [AccountNumber]
					, [Number]
					, [Name]
					, [Active]
			FROM dbo.SubAccount

	-- Delete distinct rows from SubAccount and insterting distinct ones with current date (date column has current_timestamp as default)

			Insert into SubAccountHist
			SELECT [Id]
					, [AccountNumber]
					, [Number]
					, [Name]
					, [Active]
					, DateChanged
					, Current_Timestamp 
			
			FROM SubAccount A
			WHERE A.Id in (
									SELECT	Id
									FROM	SubAccountTemp
								)
			
			DELETE SubAccount 
			FROM SubAccount A
			WHERE A.Id in (
									SELECT	Id
									FROM	SubAccountTemp
								)

			INSERT INTO SubAccount SELECT S.*, Current_TimeStamp From SubAccountTemp S

Return @@Rowcount
GO
PRINT N'Creating [dbo].[ImportSubObjectCode]...';


GO
CREATE PROCEDURE [dbo].[ImportSubObjectCode]
AS
	-- Get distinct rows into the local temp table

			TRUNCATE Table SubObjectCodeTemp;
			WITH E AS
			(
				SELECT * FROM OPENQUERY(EPM, '
							SELECT SUB_OBJECT_CD "Number"
									, SUB_Object_LD Name
							FROM (
							SELECT P.SUB_OBJECT_CD
											, P.SUB_Object_LD
											, Sub_Object_Active_FLG
											, Row_Number() OVER (PARTITION BY SUB_OBJECT_CD ORDER BY FISCAL_YEAR DESC, OBJECT_CODE_SID DESC) SUB_OBJECT_CD_RANK
							FROM    KUALI_ADMIN.KF_UA_DPT_RSD_FOBJ P 
							WHERE   OBJECT_TYPE_CD IN (''IN'', ''EX'')
									AND Sub_Object_Active_FLG = ''Y''
									AND FISCAL_YEAR >= To_Number((Select Fiscal_Year from KUALI_ADMIN.KF_UA_DPT_RSD_FPRD WHERE sysdate between FPERIOD_YEAR_START_DT_UA AND FPERIOD_YEAR_END_DT_UA AND ROWNUM = 1)) - 5
									AND SUB_OBJECT_ACCOUNT_NBR IN 
										( SELECT DISTINCT ACCOUNT_NBR 
										  FROM KUALI_ADMIN.KF_UA_DPT_RSD_ACCT P)
							)
							WHERE SUB_OBJECT_CD_RANK = 1
				')
			)



			INSERT INTO SubObjectCodeTemp 
			SELECT * FROM E
			EXCEPT 
			SELECT [Number]
					, [Name]
			FROM dbo.SubObjectCode

	-- Delete distinct rows from SubObjectCode and insterting distinct ones with current date (date column has current_timestamp as default)


			Insert into SubObjectCodeHist
			SELECT [Number]
					, [Name]
					, DateChanged
					, Current_Timestamp 
			FROM SubObjectCode A
			WHERE A.Number in (
									SELECT	Number
									FROM	SubObjectCodeTemp
								)
			
			DELETE SubObjectCode 
			FROM SubObjectCode A
			WHERE A.Number in (
									SELECT	Number
									FROM	SubObjectCodeTemp
								)

			INSERT INTO SubObjectCode SELECT S.*, Current_TimeStamp From SubObjectCodeTemp S

Return @@Rowcount
GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'b1169239-0468-44ca-a8e2-b50e4f76dfbe')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('b1169239-0468-44ca-a8e2-b50e4f76dfbe')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '2c2a4dda-8c51-4a03-9e30-8d3a4c09cccc')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('2c2a4dda-8c51-4a03-9e30-8d3a4c09cccc')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '762c548a-2c2e-445e-a1e9-ae6b77b44e67')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('762c548a-2c2e-445e-a1e9-ae6b77b44e67')

GO

GO
PRINT N'Update complete.';


GO
