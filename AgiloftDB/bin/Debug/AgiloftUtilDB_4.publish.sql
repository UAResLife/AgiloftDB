/*
Deployment script for Agiloft

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Agiloft"
:setvar DefaultFilePrefix "Agiloft"
:setvar DefaultDataPath "H:\DataMigration\DB\Data\"
:setvar DefaultLogPath "I:\DataMigration\DB\Transactions\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL)
BEGIN
    DECLARE @rc      int,                       -- return code
            @fn      nvarchar(4000),            -- file name for back up
            @dir     nvarchar(4000)             -- backup directory

    EXEC @rc = [master].[dbo].[xp_instance_regread] N'HKEY_LOCAL_MACHINE', N'Software\Microsoft\MSSQLServer\MSSQLServer', N'BackupDirectory', @dir output, 'no_output'
    if (@rc = 0) SELECT @dir = @dir + N'\'

    IF (@dir IS NULL)
    BEGIN 
        EXEC @rc = [master].[dbo].[xp_instance_regread] N'HKEY_LOCAL_MACHINE', N'Software\Microsoft\MSSQLServer\MSSQLServer', N'DefaultData', @dir output, 'no_output'
        if (@rc = 0) SELECT @dir = @dir + N'\'
    END

    IF (@dir IS NULL)
    BEGIN
        EXEC @rc = [master].[dbo].[xp_instance_regread] N'HKEY_LOCAL_MACHINE', N'Software\Microsoft\MSSQLServer\Setup', N'SQLDataRoot', @dir output, 'no_output'
        if (@rc = 0) SELECT @dir = @dir + N'\Backup\'
    END

    IF (@dir IS NULL)
    BEGIN
        SELECT @dir = N'$(DefaultDataPath)'
    END

    SELECT  @fn = @dir + N'$(DatabaseName)' + N'-' + 
            CONVERT(nchar(8), GETDATE(), 112) + N'-' + 
            RIGHT(N'0' + RTRIM(CONVERT(nchar(2), DATEPART(hh, GETDATE()))), 2) + 
            RIGHT(N'0' + RTRIM(CONVERT(nchar(2), DATEPART(mi, getdate()))), 2) + 
            RIGHT(N'0' + RTRIM(CONVERT(nchar(2), DATEPART(ss, getdate()))), 2) + 
            N'.bak' 
            BACKUP DATABASE [$(DatabaseName)] TO DISK = @fn
END
GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET RECOVERY SIMPLE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Altering [dbo].[Employee]...';


GO
ALTER TABLE [dbo].[Employee] ALTER COLUMN [PrimaryJobPosition] NVARCHAR (128) NULL;


GO
PRINT N'Altering [dbo].[ImportData]...';


GO
ALTER PROCEDURE [dbo].[ImportData]
AS
	TRUNCATE TABLE Employee

	INSERT INTO Employee
	SELECT *
	FROM OPENQUERY(EPM, '
		WITH E AS (
			SELECT  	
					E.NETID_OPRID NetID
					, E.PREF_FIRST_NAME PreferredFirstName
					, E.PREF_LAST_NAME PreferredLastName
					, J.DEPT_NAME Department
					, J.UA_TITLE_CONCAT PrimaryJobPosition
					, E.EMAIL_ADDR Email
					, Replace(Replace(E.WORK_PHONE, ''/'', ''''),''-'','''') OfficePhone
					, REPLACE(REPLACE(E.CELL_PHONE, ''/'', ''''),''-'','''') MobilePhone
					, E.EMPL_STAT_CD EmployeeStatus
					, E.TERMINATION_DT TerminationDate
					, J.SUPERVSR_EMPLID
					, E.Day_SID
					, '''' UNIT
					, Row_Number() OVER (PARTITION BY J.EmplID ORDER BY J.PRIMARY_JOB_INDC DESC, J.LAST_HIRE_DT  DESC) PosRank

			FROM  SYSADM.PS_UA_EMPL_PROF_PP E
					INNER JOIN SYSADM.PS_UA_EMPL_JOB_DTL J
					  ON E.EMPLID = J.EMPLID

			WHERE E.DAY_SID = ''20180225'' --Previous sunday to payday  
          
				  AND J.Active_Job_Indc = ''A''
				  AND ((J.DEPTID IN (8801, 8802, 8804, 8810, 8814) OR E.UA_ACCT_STRING LIKE ''%1699000%''))
		)

		SELECT    E.NetID
				, E.EmplID
				, E.FirstName
				, E.LastName
				, E.PreferredFirstName
				, E.PreferredLastName
				, E.Department
				, E.UNIT
				, E.PrimaryJobPosition
				, E.Email
				, E.OfficePhone
				, E.MobilePhone
				, E.EmployeeStatus
				, E.TerminationDate
				, Supv.NETID_OPRID SupervisorNetID
				
		FROM E
		  LEFT JOIN SYSADM.PS_UA_EMPL_PROF_PP Supv
			  ON Supv.EmplID = E.SUPERVSR_EMPLID
			  AND Supv.Day_SID = E.Day_SID
			  AND Supv.EmplID in (Select E2.EMPLID FROM E E2)
		WHERE E.PosRank = 1 
	')

	;

	TRUNCATE TABLE FiscalYear

	INSERT INTO FiscalYear
	SELECT *
	FROM OPENQUERY(EPM, '
		SELECT DISTINCT FISCAL_YEAR FiscalYear
				, FPERIOD_YEAR_START_DT_UA StartDate
				, FPERIOD_YEAR_END_DT_UA EndDate
		FROM    Kuali_admin.KF_D_FISCAL_PERIOD 
		WHERE   CURRENT_INDC = ''Y'' 
				AND FISCAL_YEAR >= 2017 
				AND FPERIOD_YEAR_NBR NOT IN (''AB'',''BB'',''CB'',''13'')
	')

	;

	Truncate TABLE FiscalQuarter

	INSERT INTO FiscalQuarter
	SELECT *
	FROM OPENQUERY(EPM, '
		SELECT DISTINCT FPERIOD_QUARTER_NBR_UA "Id"
				, FPERIOD_QUARTER_YEAR_NBR_UA "Number"
				, FPERIOD_QUARTER_SD_UA "Name"
		FROM    Kuali_admin.KF_D_FISCAL_PERIOD 
		WHERE   CURRENT_INDC = ''Y'' 
				AND FISCAL_YEAR >= 2017 
				AND FPERIOD_YEAR_NBR NOT IN (''AB'',''BB'',''CB'',''13'')
	')

	;

	TRUNCATE TABLE FiscalPeriod

	INSERT Into FiscalPeriod
	SELECT *
	FROM OPENQUERY(EPM, '

		SELECT FISCAL_PERIOD_SID "Id"
				, FPERIOD_YEAR_NBR "Number"
				, FPERIOD_SD "Name"
				, FPERIOD_START_DT_UA "StartDate"
				, FPERIOD_END_DT "EndDate"
				, FISCAL_YEAR "FiscalYear"
				, FPERIOD_QUARTER_NBR_UA "QuarterID"
		FROM    Kuali_admin.KF_D_FISCAL_PERIOD 
		WHERE   CURRENT_INDC = ''Y'' 
				AND FISCAL_YEAR >= 2017 
				AND FPERIOD_YEAR_NBR NOT IN (''AB'',''BB'',''CB'',''13'')

	')

	;

	Truncate Table Account

	Insert into Account
	SELECT *
	FROM Openquery(EPM, '
		Select DISTINCT ACCOUNT_NBR "Number"
			  , ACCOUNT_LD Name
			  , CASE WHEN ACCOUNT_CLOSED_FLG = ''Y'' THEN 1 ELSE 0 END Closed

		FROM Kuali_admin.KF_D_Account P 

		WHERE ACCOUNT_ORGANIZATION_CD = ''8801''
	')

	;

	Truncate Table ObjectCode

	Insert into ObjectCode
	Select *
	From Openquery(EPM, '
		SELECT DISTINCT P.OBJECT_CD "Number"
						,P2.Object_LD Name
		FROM    Kuali_admin.KF_D_Object_code P 
					INNER JOIN (
						SELECT  OBJECT_CD
								, OBJECT_LD 
								, Row_Number() OVER (PARTITION BY OBJECT_CD ORDER BY FISCAL_YEAR DESC, OBJECT_CODE_SID DESC) OBJECT_CD_RANK
						FROM    Kuali_admin.KF_D_Object_code P 
						WHERE   FISCAL_YEAR >= To_Number((Select Fiscal_Year from Kuali_admin.KF_D_FISCAL_PERIOD WHERE sysdate between FPERIOD_YEAR_START_DT_UA AND FPERIOD_YEAR_END_DT_UA AND ROWNUM = 1)) - 5
								AND OBJECT_TYPE_CD IN (''IN'', ''EX'')
					) P2
						ON P.OBJECT_CD = P2.OBJECT_CD
						AND P2.OBJECT_CD_RANK = 1
		WHERE   OBJECT_TYPE_CD IN (''IN'', ''EX'')
				AND FISCAL_YEAR >= To_Number((Select Fiscal_Year from Kuali_admin.KF_D_FISCAL_PERIOD WHERE sysdate between FPERIOD_YEAR_START_DT_UA AND FPERIOD_YEAR_END_DT_UA AND ROWNUM = 1)) - 5
				AND SUB_OBJECT_ACCOUNT_NBR IN 
					( SELECT DISTINCT ACCOUNT_NBR 
					  FROM Kuali_admin.KF_D_Account P 
					  WHERE ACCOUNT_ORGANIZATION_CD = ''8801'')
	')

	;

	Truncate Table ProjectCode
	
	Insert into ProjectCode
	Select *
	From	Openquery(EPM, '
		SELECT  PROJECT_CD Code
				, PROJECT_SD Name
				, PROJECT_LD Description
				, CASE WHEN PROJECT_ACTIVE_FLG = ''Y'' THEN 1 ELSE 0 END Active
		FROM    Kuali_admin.KF_D_Project P 
		WHERE ORGANIZATION_CD = ''8801''
	')

	;

	Truncate Table SubAccount
	
	Insert into SubAccount
	Select *
	From Openquery(EPM, '
		SELECT DISTINCT ACCOUNT_SID "Id"
			  , ACCOUNT_NBR "AccountNumber"
			  , SUB_ACCOUNT_NBR "Number"
			  , SUB_ACCOUNT_LD "Name"
			  , CASE WHEN SUB_ACCOUNT_ACTIVE_FLG = ''Y'' THEN 1 ELSE 0 END "Active"
		FROM  Kuali_admin.KF_D_Account P 
		WHERE ACCOUNT_ORGANIZATION_CD = ''8801'' 
		AND Sub_Account_NBR <> ''-''

	')
;

	Truncate Table SubObjectCode

	Insert into SubObjectCode
	Select *
	FROM	Openquery(EPM, '
		SELECT DISTINCT P.SUB_OBJECT_CD "Number"
						,P2.SUB_Object_LD Name
		FROM    Kuali_admin.KF_D_Object_code P 
					INNER JOIN (
						SELECT  SUB_OBJECT_CD
								, SUB_OBJECT_LD 
								, Sub_Object_Active_FLG
								, Row_Number() OVER (PARTITION BY SUB_OBJECT_CD ORDER BY FISCAL_YEAR DESC, OBJECT_CODE_SID DESC) SUB_OBJECT_CD_RANK
						FROM    Kuali_admin.KF_D_Object_code P 
						WHERE   FISCAL_YEAR >= To_Number((Select Fiscal_Year from Kuali_admin.KF_D_FISCAL_PERIOD WHERE sysdate between FPERIOD_YEAR_START_DT_UA AND FPERIOD_YEAR_END_DT_UA AND ROWNUM = 1)) - 5
								AND OBJECT_TYPE_CD IN (''IN'', ''EX'')
					) P2
						ON P.SUB_OBJECT_CD = P2.SUB_OBJECT_CD
						AND P2.SUB_OBJECT_CD_RANK = 1
		WHERE   OBJECT_TYPE_CD IN (''IN'', ''EX'')
				AND FISCAL_YEAR >= To_Number((Select Fiscal_Year from Kuali_admin.KF_D_FISCAL_PERIOD WHERE sysdate between FPERIOD_YEAR_START_DT_UA AND FPERIOD_YEAR_END_DT_UA AND ROWNUM = 1)) - 5
				AND SUB_OBJECT_ACCOUNT_NBR IN 
					( SELECT DISTINCT ACCOUNT_NBR 
					  FROM Kuali_admin.KF_D_Account P 
					  WHERE ACCOUNT_ORGANIZATION_CD = ''8801'')
	')


RETURN 0
GO
PRINT N'Update complete.';


GO
