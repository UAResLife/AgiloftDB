/*
Deployment script for Agiloft

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Agiloft"
:setvar DefaultFilePrefix "Agiloft"
:setvar DefaultDataPath "H:\DataMigration\DB\Data\"
:setvar DefaultLogPath "I:\DataMigration\DB\Transactions\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL)
BEGIN
    DECLARE @rc      int,                       -- return code
            @fn      nvarchar(4000),            -- file name for back up
            @dir     nvarchar(4000)             -- backup directory

    EXEC @rc = [master].[dbo].[xp_instance_regread] N'HKEY_LOCAL_MACHINE', N'Software\Microsoft\MSSQLServer\MSSQLServer', N'BackupDirectory', @dir output, 'no_output'
    if (@rc = 0) SELECT @dir = @dir + N'\'

    IF (@dir IS NULL)
    BEGIN 
        EXEC @rc = [master].[dbo].[xp_instance_regread] N'HKEY_LOCAL_MACHINE', N'Software\Microsoft\MSSQLServer\MSSQLServer', N'DefaultData', @dir output, 'no_output'
        if (@rc = 0) SELECT @dir = @dir + N'\'
    END

    IF (@dir IS NULL)
    BEGIN
        EXEC @rc = [master].[dbo].[xp_instance_regread] N'HKEY_LOCAL_MACHINE', N'Software\Microsoft\MSSQLServer\Setup', N'SQLDataRoot', @dir output, 'no_output'
        if (@rc = 0) SELECT @dir = @dir + N'\Backup\'
    END

    IF (@dir IS NULL)
    BEGIN
        SELECT @dir = N'$(DefaultDataPath)'
    END

    SELECT  @fn = @dir + N'$(DatabaseName)' + N'-' + 
            CONVERT(nchar(8), GETDATE(), 112) + N'-' + 
            RIGHT(N'0' + RTRIM(CONVERT(nchar(2), DATEPART(hh, GETDATE()))), 2) + 
            RIGHT(N'0' + RTRIM(CONVERT(nchar(2), DATEPART(mi, getdate()))), 2) + 
            RIGHT(N'0' + RTRIM(CONVERT(nchar(2), DATEPART(ss, getdate()))), 2) + 
            N'.bak' 
            BACKUP DATABASE [$(DatabaseName)] TO DISK = @fn
END
GO
USE [$(DatabaseName)];


GO
PRINT N'Dropping [dbo].[DF_Employee_DateChanged]...';


GO
ALTER TABLE [dbo].[Employee] DROP CONSTRAINT [DF_Employee_DateChanged];


GO
PRINT N'Dropping [dbo].[DF_EmployeeHist_DateMoved]...';


GO
ALTER TABLE [dbo].[EmployeeHist] DROP CONSTRAINT [DF_EmployeeHist_DateMoved];


GO
PRINT N'Dropping [dbo].[DF_Account_DateChanged]...';


GO
ALTER TABLE [dbo].[Account] DROP CONSTRAINT [DF_Account_DateChanged];


GO
PRINT N'Dropping [dbo].[DF_AccountHist_DateMoved]...';


GO
ALTER TABLE [dbo].[AccountHist] DROP CONSTRAINT [DF_AccountHist_DateMoved];


GO
PRINT N'Dropping [dbo].[DF_DiscalPeriod_DateChanged]...';


GO
ALTER TABLE [dbo].[FiscalPeriod] DROP CONSTRAINT [DF_DiscalPeriod_DateChanged];


GO
PRINT N'Dropping [dbo].[DF_FiscalPeriodHist_DateMoved]...';


GO
ALTER TABLE [dbo].[FiscalPeriodHist] DROP CONSTRAINT [DF_FiscalPeriodHist_DateMoved];


GO
PRINT N'Dropping [dbo].[DF_FiscalQuarter_DateChanged]...';


GO
ALTER TABLE [dbo].[FiscalQuarter] DROP CONSTRAINT [DF_FiscalQuarter_DateChanged];


GO
PRINT N'Dropping [dbo].[DF_FiscalQuarterHist_DateMoved]...';


GO
ALTER TABLE [dbo].[FiscalQuarterHist] DROP CONSTRAINT [DF_FiscalQuarterHist_DateMoved];


GO
PRINT N'Dropping [dbo].[DF_FiscalYear_DateChanged]...';


GO
ALTER TABLE [dbo].[FiscalYear] DROP CONSTRAINT [DF_FiscalYear_DateChanged];


GO
PRINT N'Dropping [dbo].[DF_FiscalYearHist_DateMoved]...';


GO
ALTER TABLE [dbo].[FiscalYearHist] DROP CONSTRAINT [DF_FiscalYearHist_DateMoved];


GO
PRINT N'Dropping [dbo].[DF_ObjectCode_DateChanged]...';


GO
ALTER TABLE [dbo].[ObjectCode] DROP CONSTRAINT [DF_ObjectCode_DateChanged];


GO
PRINT N'Dropping [dbo].[DF_ObjectCodeHist_DateMoved]...';


GO
ALTER TABLE [dbo].[ObjectCodeHist] DROP CONSTRAINT [DF_ObjectCodeHist_DateMoved];


GO
PRINT N'Dropping [dbo].[DF_ProjectCode_DateChanged]...';


GO
ALTER TABLE [dbo].[ProjectCode] DROP CONSTRAINT [DF_ProjectCode_DateChanged];


GO
PRINT N'Dropping [dbo].[DF_ProjectCodeHist_DateMoved]...';


GO
ALTER TABLE [dbo].[ProjectCodeHist] DROP CONSTRAINT [DF_ProjectCodeHist_DateMoved];


GO
PRINT N'Dropping [dbo].[DF_SubAccount_DateChanged]...';


GO
ALTER TABLE [dbo].[SubAccount] DROP CONSTRAINT [DF_SubAccount_DateChanged];


GO
PRINT N'Dropping [dbo].[DF_SubAccountHist_DateMoved]...';


GO
ALTER TABLE [dbo].[SubAccountHist] DROP CONSTRAINT [DF_SubAccountHist_DateMoved];


GO
PRINT N'Dropping [dbo].[DF_SubObjectCode_DateChanged]...';


GO
ALTER TABLE [dbo].[SubObjectCode] DROP CONSTRAINT [DF_SubObjectCode_DateChanged];


GO
PRINT N'Dropping [dbo].[DF_SubObjectCodeHist_DateMoved]...';


GO
ALTER TABLE [dbo].[SubObjectCodeHist] DROP CONSTRAINT [DF_SubObjectCodeHist_DateMoved];


GO
PRINT N'Starting rebuilding table [dbo].[Employee]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Employee] (
    [NetID]              NVARCHAR (64)  NOT NULL,
    [EmplID]             NVARCHAR (16)  NULL,
    [FirstName]          NVARCHAR (64)  NULL,
    [LastName]           NVARCHAR (64)  NULL,
    [PreferredFirstName] NVARCHAR (64)  NULL,
    [PreferredLastName]  NVARCHAR (64)  NULL,
    [Department]         NVARCHAR (64)  NULL,
    [Unit]               NVARCHAR (64)  NULL,
    [PrimaryJobPosition] NVARCHAR (128) NULL,
    [Email]              NVARCHAR (64)  NULL,
    [OfficePhone]        NVARCHAR (32)  NULL,
    [EmployeeStatus]     NVARCHAR (16)  NULL,
    [TerminationDate]    DATETIME       NULL,
    [SupervisorNetID]    NVARCHAR (64)  NULL,
    [DateChanged]        DATETIME       CONSTRAINT [DF_Employee_DateChanged] DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Employees_NetID1] PRIMARY KEY CLUSTERED ([NetID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Employee])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Employee] ([NetID], [FirstName], [LastName], [PreferredFirstName], [PreferredLastName], [Department], [Unit], [PrimaryJobPosition], [Email], [OfficePhone], [EmployeeStatus], [TerminationDate], [SupervisorNetID], [DateChanged])
        SELECT   [NetID],
                 [FirstName],
                 [LastName],
                 [PreferredFirstName],
                 [PreferredLastName],
                 [Department],
                 [Unit],
                 [PrimaryJobPosition],
                 [Email],
                 [OfficePhone],
                 [EmployeeStatus],
                 [TerminationDate],
                 [SupervisorNetID],
                 [DateChanged]
        FROM     [dbo].[Employee]
        ORDER BY [NetID] ASC;
    END

DROP TABLE [dbo].[Employee];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Employee]', N'Employee';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Employees_NetID1]', N'PK_Employees_NetID', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[EmployeeHist]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_EmployeeHist] (
    [NetID]              NVARCHAR (64)  NOT NULL,
    [EmplID]             NVARCHAR (16)  NULL,
    [FirstName]          NVARCHAR (64)  NULL,
    [LastName]           NVARCHAR (64)  NULL,
    [PreferredFirstName] NVARCHAR (64)  NULL,
    [PreferredLastName]  NVARCHAR (64)  NULL,
    [Department]         NVARCHAR (64)  NULL,
    [Unit]               NVARCHAR (64)  NULL,
    [PrimaryJobPosition] NVARCHAR (128) NULL,
    [Email]              NVARCHAR (64)  NULL,
    [OfficePhone]        NVARCHAR (32)  NULL,
    [EmployeeStatus]     NVARCHAR (16)  NULL,
    [TerminationDate]    DATETIME       NULL,
    [SupervisorNetID]    NVARCHAR (64)  NULL,
    [DateChanged]        DATETIME       NOT NULL,
    [DateMoved]          DATETIME       CONSTRAINT [DF_EmployeeHist_DateMoved] DEFAULT CURRENT_TIMESTAMP NOT NULL
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[EmployeeHist])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_EmployeeHist] ([NetID], [FirstName], [LastName], [PreferredFirstName], [PreferredLastName], [Department], [Unit], [PrimaryJobPosition], [Email], [OfficePhone], [EmployeeStatus], [TerminationDate], [SupervisorNetID], [DateChanged], [DateMoved])
        SELECT [NetID],
               [FirstName],
               [LastName],
               [PreferredFirstName],
               [PreferredLastName],
               [Department],
               [Unit],
               [PrimaryJobPosition],
               [Email],
               [OfficePhone],
               [EmployeeStatus],
               [TerminationDate],
               [SupervisorNetID],
               [DateChanged],
               [DateMoved]
        FROM   [dbo].[EmployeeHist];
    END

DROP TABLE [dbo].[EmployeeHist];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_EmployeeHist]', N'EmployeeHist';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[EmployeeTemp]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_EmployeeTemp] (
    [NetID]              NVARCHAR (64)  NOT NULL,
    [EmplID]             NVARCHAR (16)  NULL,
    [FirstName]          NVARCHAR (64)  NULL,
    [LastName]           NVARCHAR (64)  NULL,
    [PreferredFirstName] NVARCHAR (64)  NULL,
    [PreferredLastName]  NVARCHAR (64)  NULL,
    [Department]         NVARCHAR (64)  NULL,
    [Unit]               NVARCHAR (64)  NULL,
    [PrimaryJobPosition] NVARCHAR (128) NULL,
    [Email]              NVARCHAR (64)  NULL,
    [OfficePhone]        NVARCHAR (32)  NULL,
    [EmployeeStatus]     NVARCHAR (16)  NULL,
    [TerminationDate]    DATETIME       NULL,
    [SupervisorNetID]    NVARCHAR (64)  NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_EmployeeTemp_NetID1] PRIMARY KEY CLUSTERED ([NetID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[EmployeeTemp])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_EmployeeTemp] ([NetID], [FirstName], [LastName], [PreferredFirstName], [PreferredLastName], [Department], [Unit], [PrimaryJobPosition], [Email], [OfficePhone], [EmployeeStatus], [TerminationDate], [SupervisorNetID])
        SELECT   [NetID],
                 [FirstName],
                 [LastName],
                 [PreferredFirstName],
                 [PreferredLastName],
                 [Department],
                 [Unit],
                 [PrimaryJobPosition],
                 [Email],
                 [OfficePhone],
                 [EmployeeStatus],
                 [TerminationDate],
                 [SupervisorNetID]
        FROM     [dbo].[EmployeeTemp]
        ORDER BY [NetID] ASC;
    END

DROP TABLE [dbo].[EmployeeTemp];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_EmployeeTemp]', N'EmployeeTemp';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_EmployeeTemp_NetID1]', N'PK_EmployeeTemp_NetID', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[DF_Account_DateChanged]...';


GO
ALTER TABLE [dbo].[Account]
    ADD CONSTRAINT [DF_Account_DateChanged] DEFAULT Current_Timestamp FOR [DateChanged];


GO
PRINT N'Creating [dbo].[DF_AccountHist_DateMoved]...';


GO
ALTER TABLE [dbo].[AccountHist]
    ADD CONSTRAINT [DF_AccountHist_DateMoved] DEFAULT current_timestamp FOR [DateMoved];


GO
PRINT N'Creating [dbo].[DF_DiscalPeriod_DateChanged]...';


GO
ALTER TABLE [dbo].[FiscalPeriod]
    ADD CONSTRAINT [DF_DiscalPeriod_DateChanged] DEFAULT Current_Timestamp FOR [DateChanged];


GO
PRINT N'Creating [dbo].[DF_FiscalPeriodHist_DateMoved]...';


GO
ALTER TABLE [dbo].[FiscalPeriodHist]
    ADD CONSTRAINT [DF_FiscalPeriodHist_DateMoved] DEFAULT current_timestamp FOR [DateMoved];


GO
PRINT N'Creating [dbo].[DF_FiscalQuarter_DateChanged]...';


GO
ALTER TABLE [dbo].[FiscalQuarter]
    ADD CONSTRAINT [DF_FiscalQuarter_DateChanged] DEFAULT Current_Timestamp FOR [DateChanged];


GO
PRINT N'Creating [dbo].[DF_FiscalQuarterHist_DateMoved]...';


GO
ALTER TABLE [dbo].[FiscalQuarterHist]
    ADD CONSTRAINT [DF_FiscalQuarterHist_DateMoved] DEFAULT current_timestamp FOR [DateMoved];


GO
PRINT N'Creating [dbo].[DF_FiscalYear_DateChanged]...';


GO
ALTER TABLE [dbo].[FiscalYear]
    ADD CONSTRAINT [DF_FiscalYear_DateChanged] DEFAULT Current_Timestamp FOR [DateChanged];


GO
PRINT N'Creating [dbo].[DF_FiscalYearHist_DateMoved]...';


GO
ALTER TABLE [dbo].[FiscalYearHist]
    ADD CONSTRAINT [DF_FiscalYearHist_DateMoved] DEFAULT current_timestamp FOR [DateMoved];


GO
PRINT N'Creating [dbo].[DF_ObjectCode_DateChanged]...';


GO
ALTER TABLE [dbo].[ObjectCode]
    ADD CONSTRAINT [DF_ObjectCode_DateChanged] DEFAULT Current_Timestamp FOR [DateChanged];


GO
PRINT N'Creating [dbo].[DF_ObjectCodeHist_DateMoved]...';


GO
ALTER TABLE [dbo].[ObjectCodeHist]
    ADD CONSTRAINT [DF_ObjectCodeHist_DateMoved] DEFAULT Current_Timestamp FOR [DateMoved];


GO
PRINT N'Creating [dbo].[DF_ProjectCode_DateChanged]...';


GO
ALTER TABLE [dbo].[ProjectCode]
    ADD CONSTRAINT [DF_ProjectCode_DateChanged] DEFAULT Current_Timestamp FOR [DateChanged];


GO
PRINT N'Creating [dbo].[DF_ProjectCodeHist_DateMoved]...';


GO
ALTER TABLE [dbo].[ProjectCodeHist]
    ADD CONSTRAINT [DF_ProjectCodeHist_DateMoved] DEFAULT Current_Timestamp FOR [DateMoved];


GO
PRINT N'Creating [dbo].[DF_SubAccount_DateChanged]...';


GO
ALTER TABLE [dbo].[SubAccount]
    ADD CONSTRAINT [DF_SubAccount_DateChanged] DEFAULT Current_Timestamp FOR [DateChanged];


GO
PRINT N'Creating [dbo].[DF_SubAccountHist_DateMoved]...';


GO
ALTER TABLE [dbo].[SubAccountHist]
    ADD CONSTRAINT [DF_SubAccountHist_DateMoved] DEFAULT Current_Timestamp FOR [DateMoved];


GO
PRINT N'Creating [dbo].[DF_SubObjectCode_DateChanged]...';


GO
ALTER TABLE [dbo].[SubObjectCode]
    ADD CONSTRAINT [DF_SubObjectCode_DateChanged] DEFAULT Current_Timestamp FOR [DateChanged];


GO
PRINT N'Creating [dbo].[DF_SubObjectCodeHist_DateMoved]...';


GO
ALTER TABLE [dbo].[SubObjectCodeHist]
    ADD CONSTRAINT [DF_SubObjectCodeHist_DateMoved] DEFAULT Current_Timestamp FOR [DateMoved];


GO
PRINT N'Altering [dbo].[ImportEmployee]...';


GO
ALTER PROCEDURE [dbo].[ImportEmployee]
AS
	-- Get distinct rows into the local temp table

			TRUNCATE Table EmployeeTemp;

			WITH E AS
			(
				SELECT * FROM OPENQUERY(EPM, '
						WITH E AS (
							SELECT  DISTINCT	
									E.NETID_OPRID NetID
									, E.EMPLID
									, P.FIRST_NM FirstName
									, P.LAST_NM LastName
									, N.First_name PreferredFirstName
									, N.Last_Name PreferredLastName
									, J.DEPT_NAME Department
									, J.UA_TITLE_CONCAT PrimaryJobPosition
									, J.POSITION_NBR
									, E.EMAIL_ADDR Email
									, Replace(Replace(E.WORK_PHONE, ''/'', ''''),''-'','''') OfficePhone
									, E.EMPL_STAT_CD EmployeeStatus
									, E.TERMINATION_DT TerminationDate
									, J.SUPERVSR_EMPLID
									, E.Day_SID
									, Row_Number() OVER (PARTITION BY J.EmplID ORDER BY J.PRIMARY_JOB_INDC DESC, J.LAST_HIRE_DT  DESC) PosRank

							FROM  SYSADM.PS_UA_EMPL_PROF_PP E
									INNER JOIN SYSADM.PS_UA_EMPL_JOB_DTL J
									  ON E.EMPLID = J.EMPLID
									Left Join SYSADM.PS_D_PERSON P
										On P.Person_ID = E.EmplID
										AND P.SRC_SYS_ID = ''HCM''
									Left Join 
										(
											Select First_name
													, Middle_Name
													, Last_Name
													, EmplID
													, Row_Number() OVER (Partition by EmplID Order by LASTUPDDTTM DESC) Newest
											FROM SysAdm.PS_S_NAMES N
											WHERE	NAME_TYPE = ''PRF''
													AND SRC_SYS_ID = ''HCM''
										) N
										On N.EMPLID = E.EMPLID
										AND N.Newest = 1

							WHERE E.DAY_SID = (SELECT MAX(E.DAY_SID) FROM SYSADM.PS_UA_EMPL_PROF_PP E) --Previous sunday to payday  
          
								  AND J.Active_Job_Indc = ''A''
								  AND ((J.DEPTID IN (8801, 8802, 8804, 8810, 8814) OR E.UA_ACCT_STRING LIKE ''%1699000%''))
						), SA AS (
							SELECT DISTINCT ACCOUNT_SID
								  , ACCOUNT_NBR
								  , SUB_ACCOUNT_NBR
								  , SUB_ACCOUNT_LD
							FROM  Kuali_admin.KF_D_Account P 
							WHERE ACCOUNT_ORGANIZATION_CD = ''8801'' AND P.SUB_ACCOUNT_ACTIVE_FLG = ''Y''
							AND Sub_Account_NBR <> ''-''
						  )

						SELECT    E.NetID
								, E.EmplID
								, E.FirstName
								, E.LastName
								, E.PreferredFirstName
								, E.PreferredLastName
								, E.Department
								, P.SUB_ACCOUNT_LD UNIT
								, E.PrimaryJobPosition
								, E.Email
								, E.OfficePhone
								, E.EmployeeStatus
								, E.TerminationDate
								, Supv.NETID_OPRID SupervisorNetID
				
						FROM E
							LEFT JOIN (
							  SELECT P.POSITION_NBR
									  , P.ACCOUNT
									  , P.SUB_ACCT_NBR
									  , SA.SUB_ACCOUNT_LD
									  , ROW_NUMBER() OVER (PARTITION BY POSITION_NBR ORDER BY EFFDT DESC) SubAccountRank
							  FROM PS_UA_POS_CNTRL P
									INNER JOIN SA ON SA.ACCOUNT_NBR = P.ACCOUNT AND P.SUB_ACCT_NBR = SA.SUB_ACCOUNT_NBR
                
							)P
							  ON E.POSITION_NBR = P.POSITION_NBR
							  AND P.SubAccountRank = 1
						  LEFT JOIN SYSADM.PS_UA_EMPL_PROF_PP Supv
							  ON Supv.EmplID = E.SUPERVSR_EMPLID
							  AND Supv.Day_SID = E.Day_SID
							  AND Supv.EmplID in (Select E2.EMPLID FROM E E2)
						WHERE E.PosRank = 1
				')
			)

			INSERT INTO EmployeeTemp 
			SELECT * FROM E 
			EXCEPT 
			SELECT [NetID]
					, EmplID 
					, [FirstName]
					, [LastName]
					, [PreferredFirstName]
					, [PreferredLastName]
					, [Department]
					, [Unit]
					, [PrimaryJobPosition]
					, [Email]
					, [OfficePhone]
					, [EmployeeStatus]
					, [TerminationDate]
					, [SupervisorNetID] 
			FROM dbo.Employee

	-- Delete distinct rows from Employee and insterting distinct ones with current date (date column has current_timestamp as default)

			Insert into EmployeeHist
			SELECT [NetID]
					, EmplID 
					, [FirstName]
					, [LastName]
					, [PreferredFirstName]
					, [PreferredLastName]
					, [Department]
					, [Unit]
					, [PrimaryJobPosition]
					, [Email]
					, [OfficePhone]
					, [EmployeeStatus]
					, [TerminationDate]
					, [SupervisorNetID] 
					, DateChanged
					, Current_Timestamp 
			FROM Employee A
			WHERE A.NetID in (
									SELECT	NetID
									FROM	EmployeeTemp
								)
			
			DELETE Employee 
			FROM Employee A
			WHERE A.NetID in (
									SELECT	NetID
									FROM	EmployeeTemp
								)

			INSERT INTO Employee SELECT E.*, Current_TimeStamp From EmployeeTemp E



Return @@Rowcount
GO
PRINT N'Update complete.';


GO
